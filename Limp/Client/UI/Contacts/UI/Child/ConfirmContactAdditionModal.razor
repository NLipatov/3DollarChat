@using Ethachat.Client.Services.ContactsProvider
@using Ethachat.Client.UI.Contacts.Models
@using Ethachat.Client.UI.Shared.Button
@using Ethachat.Client.UI.Shared.Modal
@using ButtonType = Ethachat.Client.UI.Shared.Button.ButtonType
@inject IContactsProvider ContactsProvider
@inject IJSRuntime JsRuntime

<CustomModal
    @ref="modal"
    Title="Add user to contacts"
    BodyLines=@BodyLines
    Buttons=@GetModalButtons()/>

@code {
    [Parameter] public EventCallback<string> OnContactAddition { get; set; }

    //reference to a modal-component
    private CustomModal? modal = default!;

    public void ShowModal() => modal?.Show();
    public void HideModal() => modal?.Hide();

    private string[] BodyLines { get; set; } = [];
    private bool _isUserExists = true;
    private string _newContactUsername = string.Empty;
    private Contact? Existing { get; set; }

    public async Task ShowModalWithBodyTextAsync(ContactAdditionModalDTO modalDto)
    {
        Existing = await ContactsProvider.GetContact(_newContactUsername, JsRuntime);
        _newContactUsername = modalDto.NewContactUsername;
        _isUserExists = modalDto.IsUserExists;
        BodyLines = GetModalBodyText();

        modal?.Show();
    }

    private string[] GetModalBodyText()
    {
        if (Existing is not null)
            return [$"{_newContactUsername} is already in your contact book"];

        if (_isUserExists)
            return [$"Confirm adding '{_newContactUsername}' as new contact"];
        
        return ["There is no user with such username"];
    }

    private CustomButton[] GetModalButtons()
    {
        if (_isUserExists && Existing is null)
        {
            return
            [
                new CustomButton { ButtonType = ButtonType.Success, Title = "Confirm", OnPressAsync = () => OnContactAddition.InvokeAsync(_newContactUsername) },
                new CustomButton { ButtonType = ButtonType.Secondary, Title = "Cancel", OnPress = HideModal }
            ];
        }

        return [new CustomButton { ButtonType = ButtonType.Secondary, Title = "Hide", OnPress = HideModal }];
    }

}