@using Ethachat.Client.ClientOnlyModels
@using Ethachat.Client.Services.AuthenticationService.Handlers
@using Ethachat.Client.Services.HubServices.HubServices.Implementations.MessageService
@using Ethachat.Client.Services.InboxService
@using Ethachat.Client.UI.Chat.UI.Childs.ChatHeader.Modals
@using EthachatShared.Models.Message
@using Ethachat.Client.UI.Chat.UI.Childs.ChatHeader.Indicators
@inject IMessageBox _messageBox
@inject IMessageService _messageService
@inject IAuthenticationHandler AuthenticationHandler

<div class="header">
    <AvatarOnlineIndicator
        PartnerUsername="@PartnerName"/>

    <div style="display: flex;
                flex-direction: column;
                margin-left: 10px;">

        <span class="name">@PartnerName</span>

        <div style="display: flex; flex-direction: row; gap: 10px;">
            <TypingIndicator
                PartnerUsername="@PartnerName"/>

            <SendingFileIndicator
                PartnerUsername="@PartnerName"/>
        </div>

    </div>
    <div class="key-info">
        <CustomButton
            StyleString="box-shadow: none; min-width: auto;"
            OnPressAsync=@DeleteConversationAsync
            HtmlTitle="Clear conversation">
            <ChildContext>
                <CustomIcon
                    Name="trash-can"/>
            </ChildContext>
        </CustomButton>
        <CustomButton
            StyleString="box-shadow: none; min-width: auto;"
            OnPress=@ShowModal
            HtmlTitle="Renew AES Key">
            <ChildContext>
                <CustomIcon
                    Name="key"/>
            </ChildContext>
        </CustomButton>

        <AesKeyIndicator
            PartnerUsername=@PartnerName/>
    </div>
</div>

<AESKeyRenewalModal
    @ref=aesRenewalModal
    OnAESRenewal="OnAESRenewal"/>

@code {
    [Parameter] public string PartnerName { get; set; } = "Unnamed";
    [Parameter] public bool IsOnline { get; set; } = false;
    [Parameter] public string AvatarLink { get; set; } = "/assets/jpg/profile-user-icon-isolated-on-white-background-eps10-free-vector.jpg";
    [Parameter] public EventCallback OnAESRenewal { get; set; }
    private AESKeyRenewalModal? aesRenewalModal { get; set; }


    private Guid GetFileId(Message message)
    {
        return message.Type switch
        {
            MessageType.Metadata => message.Metadata!.DataFileId,
            MessageType.DataPackage => message.Package!.FileDataid,
            _ => throw new ArgumentException("Unknown message type")
        };
    }

    private void ShowModal()
    {
        if (aesRenewalModal != null)
            aesRenewalModal.ShowModal();
    }

    private async Task DeleteConversationAsync()
    {
        await _messageService.SendMessage(new ClientMessage
        {
            Type = MessageType.ConversationDeletionRequest,
            Target = PartnerName,
            Sender = await AuthenticationHandler.GetUsernameAsync()
        });
        _messageBox.Delete(PartnerName);
    }

}