@using ButtonType = Ethachat.Client.UI.Shared.Button.ButtonType

<CustomModal
    @ref="_modal"
    Title="Confirm AES key renewal"
    BodyLines=@(["Not yet decrypted messages will be lost"])
    Buttons=@(
    [
        new CustomButton { Title = "Confirm", ButtonType = ButtonType.Success, OnPressAsync = RenewAesAsync },
        new CustomButton { Title = "Cancel", ButtonType = ButtonType.Secondary, OnPress = HideModal }
    ])/>

@code {
    [Parameter]
    public EventCallback OnAESRenewal { get; set; }

    //reference to a modal-component
    private CustomModal _modal = default!;

    public void ShowModal() => _modal.Show();

    public void HideModal() => _modal.Hide();

    private async Task RenewAesAsync()
    {
        await OnAESRenewal.InvokeAsync();
        HideModal();
    }
}
