@using System.Text.Json;
@using System.Text;
@using AuthAPI.DTOs.Claims;
@using AuthAPI.DTOs.User;
@using System.Web;
@using Limp.Client.Utilities;
@using LimpShared.Authentification;
@inject ILimpHttpClient _limpHttpClient;
@inject IConfiguration _configuration;
@inject IJSRuntime js
@page "/login"

<h3>Login</h3>

<label>
    Login
    <input required @bind=Username @bind:event="oninput" />
</label>
<label>
    Password
    <input required type="password" @bind=Password @bind:event="oninput" />
</label>

<button @onclick="LogIn">
    Login
</button>

@if (isLoggedIn)
{
    <h2>
        Logged in Succesfully!
    </h2>
}

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private bool isLoggedIn { get; set; } = false;

    private async Task LogIn()
    {
        var data = new UserDTO()
        {
                Username = Username,
                Password = Password,
                Claims = new List<UserClaimsDTO>(),
        };

        var tokenPair = await _limpHttpClient.GetJWTPairAsync(data);

        if(tokenPair == null)
        {
            return;
        }

        await js.InvokeVoidAsync("localStorage.setItem", "access-token", tokenPair.AccessToken);
        await js.InvokeVoidAsync("localStorage.setItem", "refresh-token", tokenPair.RefreshToken.Token);
        isLoggedIn = true;
    }

}
