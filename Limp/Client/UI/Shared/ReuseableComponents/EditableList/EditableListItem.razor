@using Ethachat.Client.UI.Shared.Icon
@using Ethachat.Client.UI.Shared.ReuseableComponents.EditableList.Models
@using Ethachat.Client.UI.Chat.UI.Childs.ChatHeader.Indicators;

<div style="cursor: pointer; @Style" @onclick="HandleClick">
    <div class="item-card" style="border-left: none;">
        <div class="header">
            @if (ItemModel.AvatarOnlineIndicator is not null)
            {
                <AvatarOnlineIndicator
                    PartnerUsername=@ItemModel.ItemName
                    AvatarLink=@ItemModel.AvatarOnlineIndicator.AvatarLink/>
                <div>
                    <span class="username" style="color: black; text-decoration: none;">@ItemModel.ItemName</span>
                </div>
            }
            else
            {
                <div class="profile-picture">
                    <i class="@IconClass item-icon"></i>
                </div>
            }
            @if (ItemModel.IsEncryptionSettedUp)
            {
                <div class="key-info">
                    <i class="bi bi-key-fill key-icon" data-bs-toggle="tooltip" title="AES key for secure communication"></i>
                </div>
            }
            @if (ItemModel.Icons.Any())
            {
                @foreach (var icon in ItemModel.Icons)
                {
                    <CustomIcon
                        Name=@icon.Name
                        Color=@icon.Color
                        Type=@icon.Type
                        CursorPointer=@icon.CursorPointer/>
                }
            }
            @if (ItemModel.ShowBadge)
            {
                <Badge Style=@ItemModel.BadgeModel.InlineStyles>@ItemModel.BadgeModel.Text</Badge>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string IconClass { get; set; } = string.Empty;

    [Parameter] public ItemModel ItemModel { get; set; } = new();

    [Parameter] public Action<string>? OnItemClickedAction { get; set; }

    [Parameter] public string Style { get; set; } = string.Empty;

    private void HandleClick()
    {
        if (OnItemClickedAction is not null)
        {
            if (string.IsNullOrWhiteSpace(ItemModel.ItemName))
                Console.WriteLine($"Invalid {typeof(ItemModel)} parameter passed in:" +
                                  $"{nameof(ItemModel.ItemName)} was a empty string or null.");

            OnItemClickedAction.Invoke(ItemModel.ItemName);
        }
        else
            Console.WriteLine("On click event handler action parameter is not passed in.");
    }

}