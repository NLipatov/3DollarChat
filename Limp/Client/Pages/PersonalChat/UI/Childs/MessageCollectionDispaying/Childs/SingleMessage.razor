@using ClientServerCommon.Models.Message;

@if(Message != null)
{
    <div class="message @messageClass">
        <div class="message-text">
            <span>@(Message.PlainTextPayload)</span>
        </div>
        <div class="timestamp">
            <span>@Message.DateSent.ToString("hh:mm")</span>
            @if (Message.Sender == "You")
            {
                @if (Message.Sender == "You")
                {
                    @if (Message.IsRead)
                    {
                        //Wrapping i in span tag solves "Cannot read property 'removeChild' of null" error.
                        //issue reference: https://stackoverflow.com/a/64686984
                        <span>
                            <i class="fas fa-check-double @messageClass"></i>
                        </span>
                    }
                    else if (Message.IsReceived)
                    {
                        //Wrapping i in span tag solves "Cannot read property 'removeChild' of null" error.
                        //issue reference: https://stackoverflow.com/a/64686984
                        <span>
                            <i class="fas fa-check @messageClass"></i>
                        </span>
                    }
                }
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public Message? Message { get; set; }
    private bool isOutcoming;
    private string messageClass = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        isOutcoming = Message?.Sender == "You";
        messageClass = isOutcoming ? "outcoming" : "incoming";

        await base.OnParametersSetAsync();
    }
}
