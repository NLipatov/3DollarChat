@page "/settings/tokenRefreshHistory"
@using Limp.Client.Services.HubService.AuthService
@using Limp.Client.Services.HubServices.CommonServices.SubscriptionService
@using Limp.Client.HubInteraction.Handlers.Helpers
@inject IAuthService _authService 
@inject IHubServiceSubscriptionManager _hubServiceSubscriptionManager
@inject IJSRuntime _jS
@implements IDisposable

<div class="p-2">
    <span>Records in history: @_tokenRenewalRecords.Count</span>
</div>

@code {
    private Guid ComponentId { get; set; }
    private List<TokenRefreshHistory> _tokenRenewalRecords = new ();
    
    public void Dispose() => _hubServiceSubscriptionManager.RemoveComponentCallbacks(ComponentId);

    protected override async Task OnInitializedAsync()
    {
        //Shortcut for cases when user was not yet authenticated
        if (string.IsNullOrWhiteSpace(await JWTHelper.GetAccessTokenAsync(_jS))) return;

        //This id will be needed on dispose stage
        //On dispose stage we need to clear out all of the component event subscriptions
        ComponentId = Guid.NewGuid();
        
        _hubServiceSubscriptionManager
            .AddCallback<List<TokenRefreshHistory>>(UpdateHistories, "OnRefreshTokenHistoryResponse", ComponentId);
        
        await _authService.GetRefreshTokenHistory();
    }

    private void UpdateHistories(List<TokenRefreshHistory> histories)
    {
        _tokenRenewalRecords = histories;
        StateHasChanged();
    }
}