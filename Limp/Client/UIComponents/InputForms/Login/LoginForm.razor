@using AuthAPI.DTOs.User;
@using ClientServerCommon.Models.Login;
@using Limp.Client.UIComponents.InputForms.InputBoxes
@using Limp.Client.UIComponents.InputForms.Login.Models;
@using Limp.Client.UIComponents.SuccessOrErrorMessage

<div class="registration-page-content">
    <EditForm Model="@LoginFormModel" OnSubmit="OnLogin">
        <div class="form-content" style="display: @(LoginAttemptResult.Result == AuthResultType.Success ? "none" : "unset");">            
            <div class="registration-form-header">
                <span>Log In to your Limp Messenger Account</span>
            </div>
            <div class="registration-form">
                <InputBox InputText="@LoginFormModel.Username"
                          IconClass="fa-solid fa-user"
                          Placeholder="Username"
                          BindEvent="oninput"                
                          IsRequired="true"
                          OnInput="((value) => LoginFormModel.Username = value)"/>

                <InputBox InputText="@LoginFormModel.Password"
                          IconClass="fa-solid fa-key"
                          Placeholder="Password"
                          BindEvent="oninput"                
                          IsRequired="true"
                          Type="password"
                          OnInput="((value) => LoginFormModel.Password = value)" />


                <button class="submit-button">Log In</button>
            </div>
        </div>

        <ResultMessagesBlock
            Result="LoginAttemptResult"/>

        <div class="validation-results">
                <DataAnnotationsValidator />
            <ValidationSummary style="
            display: flex;
            flex-direction: column;
            gap: 10px;" />
            </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public Action<UserDTO> OnLoginEvent { get; set; } = ((dto) => throw new ApplicationException
    ($"At {nameof(LoginFormModel)} component please provide a handler for event: {nameof(OnLogin)}"));

    [Parameter]
    public AuthResult LoginAttemptResult { get; set; } = new();

    private LoginFormModel LoginFormModel = new();

    private void OnLogin()
    {
        UserDTO data = new UserDTO()
            {
                Username = LoginFormModel.Username,
                Password = LoginFormModel.Password,
            };

        OnLoginEvent(data);
    }
}
