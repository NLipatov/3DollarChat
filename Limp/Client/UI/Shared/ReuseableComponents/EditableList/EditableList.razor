@using Ethachat.Client.UI.Shared.ReuseableComponents.EditableList.Models
@using ButtonType = Ethachat.Client.UI.Shared.Button.ButtonType

<div class="editable-list-container">
    <div class="editable-list-header" style=@(!string.IsNullOrWhiteSpace(ListHeader) ? "" : "justify-content: end;")>
        @if (!string.IsNullOrWhiteSpace(ListHeader))
        {
            <h1>@ListHeader</h1>
        }
        <CustomButton
            ButtonType="ButtonType.Primary"
            OnPress=@ToggleContactEditionMode>
            <ChildContext>
                <span>
                    @(EditionMode ? "Done" : "Edit")
                </span>
            </ChildContext>
        </CustomButton>
    </div>
    <div class="editable-list-item-container">
        <Virtualize Items="@ItemCollection" Context="item">
            <div class="editable-list-item" @onclick=@(async () => { await OnItemRemoved.InvokeAsync(item); })>
                <div style="display: @(EditionMode ? "" : "none"); font-size: 1.5rem;">
                    <CustomIcon
                        Color="red"
                        Name="circle-minus"
                        CursorPointer="true"/>
                </div>
                <EditableListItem
                    OnItemClickedAction=@((_) => OnItemClicked.InvokeAsync(item))
                    ItemModel="item"
                    IconClass=@IconClass
                    Style="width: 100%;"/>
            </div>
        </Virtualize>
    </div>
</div>

@code {
    [Parameter] public string? IconClass { get; set; } = string.Empty;

    [Parameter] public string ListHeader { get; set; } = string.Empty;

    [Parameter] public bool EditionMode { get; set; }

    [Parameter] public List<ItemModel> ItemCollection { get; set; } = new();

    [Parameter] public EventCallback<ItemModel> OnItemRemoved { get; set; }

    [Parameter] public EventCallback<ItemModel> OnItemClicked { get; set; }

    private void ToggleContactEditionMode()
    {
        EditionMode = !EditionMode;
        StateHasChanged();
    }

}