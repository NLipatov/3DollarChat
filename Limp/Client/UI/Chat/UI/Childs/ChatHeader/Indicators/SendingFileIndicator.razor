@inherits Ethachat.Client.UI.CommonComponents.BaseComponents.BaseEventListeningComponent

@if (IsSendingBinary)
{
    <span>
        <CustomIcon
            Name="file-shield"
            Type="CustomIconType.Solid"
            HtmlTitle="binary file transmission"
            Color="white"/>
    </span>
}

@code {
    [Parameter] public int CooldownMs { get; set; } = 600;
    [Parameter] public string PartnerUsername { get; set; } = string.Empty;
    [Parameter] public string AvatarLink { get; set; } = "/assets/jpg/profile-user-icon-isolated-on-white-background-eps10-free-vector.jpg";
    private bool IsSendingBinary { get; set; }
    private CancellationTokenSource _typingCancellation = new();

    protected override void SubscribeToHubEvents()
    {
        base.SubscribeToHubEvents();
        HubServiceSubscriptionManager.AddCallback<string>(OnSendingFile, "OnBinaryTransmitting", ComponentId);
    }

    private async Task OnSendingFile(string partnerName)
    {
        if (partnerName == PartnerUsername)
        {
            CancellationToken cancellationToken;
            await _typingCancellation.CancelAsync();
            _typingCancellation = new();
            cancellationToken = _typingCancellation.Token;

            //Show indicator
            IsSendingBinary = true;
            StateHasChanged();

            //Wait for some time and remove indicator
            try
            {
                await Task.Delay(CooldownMs, cancellationToken);
            }
            catch (TaskCanceledException)
            {
                //Token's cancelled meaning that event is still happening
                return;
            }

            IsSendingBinary = false;
            StateHasChanged();
        }
    }

}